services:
  nginx:
    container_name: ${CONTAINER_NAME}-nginx
    build:
      context: .
      dockerfile: ./nginx/dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - wordpressdata:/var/www/html
    networks:
      - front

  database:
    container_name: ${CONTAINER_NAME}-database
    image: mysql:8.0
    restart: unless-stopped
    environment:
       MYSQL_DATABASE: ${DATABASE_NAME}
       MYSQL_PASSWORD: ${DATABASE_PASSWORD}
       MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
       MYSQL_USER: ${DATABASE_USER}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$DATABASE_ROOT_PASSWORD" ]
      timeout: 30s
      retries: 10

    volumes:
      - sqldata:/var/lib/mysql
    networks:
      - back
    

  wordpress:
    depends_on:
      - database
      - redis
    container_name: ${CONTAINER_NAME}-wordpress
    image: wordpress:6.5.2-fpm-alpine
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: database:'${DATABASE_HOST_PORT}'
      WORDPRESS_DB_NAME: '${DATABASE_NAME}'
      WORDPRESS_DB_USER: '${DATABASE_USER}'
      WORDPRESS_DB_PASSWORD: '${DATABASE_PASSWORD}'
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_REDIS_HOST', '${WP_REDIS_HOST}');
        define('WP_REDIS_PORT', ${WP_REDIS_PORT});
        define('WP_CACHE', ${WP_CACHE});
      restart: always
    command: ["bash", "/usr/local/bin/custom-entrypoint.sh"]
    volumes:
      - wordpressdata:/var/www/html
      - ./custom-entrypoint.sh:/usr/local/bin/custom-entrypoint.sh
    networks:
      - front
      - back

  redis:
    image: redis:latest
    container_name: ${CONTAINER_NAME}-redis
    restart: always
    networks:
      - back
    volumes:
      - redis_data:/data
  
volumes:
  sqldata:
  wordpressdata:
  redis_data:

networks:
  front:
    driver: bridge
  back:
    driver: bridge